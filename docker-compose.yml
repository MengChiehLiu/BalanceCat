version: "3.9"
services:

  nginx:
    container_name: balanceCat_nginx
    image: nginx:mainline-alpine-slim
    restart: always
    volumes:
      - balanceCat_nginx_volume:/etc/nginx
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./private/combined.crt:/etc/nginx/combined.crt
      - ./private/private.key:/etc/nginx/private.key
    ports:
      - "80:80"
      - "443:443"
    networks:
      - balanceCat_network
    depends_on:
      # - frontend
      - backend

  # frontend:
  #   container_name: balanceCat_frontend
  #   build: 
  #     context: ./frontend          
  #     dockerfile: Dockerfile
  #   restart: always
  #   volumes:
  #     - balanceCat_frontend_volume:/shared_data/server
  #   networks:
  #     - balanceCat_network
  #   depends_on:
  #     - backend

  backend:
    container_name: balanceCat_backend
    build: 
      context: ./backend          
      dockerfile: Dockerfile
    restart: always
    environment:
      - VIRTUAL_HOST=balanceCat_backend
    volumes:
      - balanceCat_backend_volume:/shared_data/server
      - ./backend/public:/BalanceCat/backend/public
    networks:
      - balanceCat_network
    depends_on:
      - mysql
      - redis

  mysql:
    container_name: balanceCat_mysql
    image: mysql
    restart: always
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
    volumes:
      - balanceCat_mysql_volume:/var/lib/mysql
    networks:
      - balanceCat_network

  redis:
    container_name: balanceCat_redis
    image: redis:alpine
    restart: always
    volumes:
      - balanceCat_redis_volume:/data
    networks:
      - balanceCat_network


networks:
  balanceCat_network:
    driver: bridge

volumes:
  balanceCat_nginx_volume:
  balanceCat_backend_volume:
  # balanceCat_frontend_volume:
  balanceCat_mysql_volume:
  balanceCat_redis_volume:
  
